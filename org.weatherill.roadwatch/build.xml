<?xml version="1.0"?>
	<!-- define the project -->
	<project name = "RoadWatchPortlet" default="build" basedir=".">
		
	<!-- define project properties -->
	<property name="compiler" value="modern"/>
	<property name="fork" value="no"/>
	<property name="verbose" value="no"/>
	<property name="debug" value="on"/>
	<property name="optimize" value="on"/>
	<property name="deprecation" value="on"/>
	<property name="target" value="1.5"/>
	<property name="source" value="1.5"/>
	<property file="build.properties" />
	<property environment="env"/>
		
	<!-- define properties to refer to directories in the project -->
	<property name="api.classes.dir" value="classes"/>
	<property name="webinf.dir" value="WEB-INF"/>
	<property name="webinf.lib.dir" value="WEB-INF/lib"/>
	<property name="lib.dir" value="lib"/>
	<property name="src.dir" value="src"/>
	<property name="build.dir" value="build"/>
	<property name="webinf.classes.dir" value="${webinf.dir}/classes"/>
	<property name="webinf.classes.content.dir" value="${webinf.dir}/classes/content"/>
	<property name="web.xml" value="${webinf.dir}/web.xml"/>

	<fileset id="webapp.libs" dir="${webinf.lib.dir}">
		<include name="*.jar"/>
	</fileset>
	<fileset id="libs" dir="${lib.dir}">
		<include name="*.jar"/>
	</fileset>

	<path id="class.path">
		<pathelement path="${webinf.classes.dir}"/>
		<fileset refid="webapp.libs"/>
		<fileset refid="libs"/>
	</path>

	<pathconvert pathsep=":" property="class.path" refid="class.path"/>
	
	<fileset id="war.files" dir=".">
		<include name="${webinf.dir}/**"/>
		<exclude name="${webinf.dir}/Language-ext.properties"/>
		<include name="images/**"/>
		<include name="css/**"/>
		<include name="js/**"/>
		<exclude name="${web.xml}"/>
	</fileset>

	<target name="compile.api">
		<mkdir dir="${api.classes.dir}"/>
		<javac srcdir="${src.dir}" destdir="${api.classes.dir}"
		       fork="${fork}" verbose="${verbose}" deprecation="${deprecation}"
		       debug="${debug}" optimize="${optimize}"
		       compiler="${compiler}" target="${target}" source="${source}">
			<exclude name="org/weatherill/roadwatch/portlet/**"/>		       
			<classpath refid="class.path"/>
		</javac>	
		<copy todir="${api.classes.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
		<copy todir="${api.classes.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml"/>
			</fileset>
		</copy>
		<copy todir="${api.classes.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.json"/>
			</fileset>
		</copy>					
	</target>
	
	<target name="jar.api" depends="compile.api">
		<jar destfile="${webinf.lib.dir}/org.weatherill.roadwatch.jar" basedir="${api.classes.dir}"/>
	</target>
	
	<target name="compile">
		<mkdir dir="${webinf.classes.dir}"/>
		<!-- Content directory contains Liferay resource bundle-->
		<mkdir dir="${webinf.classes.content.dir}"/>
		<javac srcdir="${src.dir}" destdir="${webinf.classes.dir}"
		       fork="${fork}" verbose="${verbose}" deprecation="${deprecation}"
		       debug="${debug}" optimize="${optimize}"
		       compiler="${compiler}" target="${target}" source="${source}">
			<include name="org/weatherill/roadwatch/portlet/**"/>		       
			<classpath refid="class.path"/>
		</javac>				
		<copy todir="${webinf.classes.content.dir}">
			<fileset dir="${webinf.dir}">
				<include name="Language-ext.properties"/>
			</fileset>
		</copy>
	</target>

	<!-- target to create the project WAR file -->
	<target name="build" depends="clean,jar.api,compile">
		<mkdir dir="${build.dir}"/>
		<war destfile="${build.dir}/org.weatherill.roadwatch-portlet.war" webxml="${web.xml}">
			<fileset refid="war.files"/>
		</war>
		<copy todir="${liferay.portal.home}/deploy">
			<fileset dir="${build.dir}">
				<include name="**/*.war" />
			</fileset>
		</copy>
	</target>

	<!-- target to clean up all files created by various tasks -->
	<target name="clean">
		<delete quiet="true" includeemptydirs="true">
			<fileset dir="${webinf.classes.dir}" includes="**/*"/>
			<fileset dir="${build.dir}"/>
			<fileset dir="${work.dir}"/>
			<fileset dir="${api.classes.dir}"/>
		</delete>
	</target>
</project>